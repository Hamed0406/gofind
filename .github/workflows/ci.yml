name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:

permissions:
  contents: read

jobs:
  test:
    name: go test (${{ matrix.os }}, go ${{ matrix.go }})
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        go: ["1.22.x"]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          cache: true

      - name: Check tidy (must be clean)
        shell: bash
        run: |
          go mod tidy
          if ! git diff --quiet -- go.mod go.sum; then
            echo "::error::go.mod/go.sum changed after 'go mod tidy'. Commit the result."
            git --no-pager diff -- go.mod go.sum
            exit 1
          fi

      - name: Vet
        run: go vet ./...

      - name: Build CLI
        run: go build ./cmd/gofind

      - name: Test with race + coverage
        run: go test ./... -race -coverprofile=coverage.out -covermode=atomic -v

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.os }}.out
          path: coverage.out

  lint:
    name: golangci-lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go (1.23.x to match golangci-lint build)
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'
          check-latest: false
          cache: true

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.61.0
          args: --timeout=5m ./...
